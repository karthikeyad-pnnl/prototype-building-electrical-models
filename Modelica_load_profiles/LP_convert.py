######################################
#This code will convert EnergyPlus output load profile csv files to Modelica Combitimetable input files 
#Include this file in folder where all load profiles generated by the EnergyPlus are located
#Select the city name
#Delete the existing file if file names are duplicate
#######################################

import time
import csv
startTime = time.time()

#Select the Energy Plus city name
#city_name = "Great-Falls-"
#city_name = "San-Diego-"
city_name = "Tampa-"

#Generate the file format required for CombiTimetable
def first_line(LP_fname):
    with open(LP_fname, 'a') as f:
        lines = "#1"
        f.writelines(lines)
    f.close()

def csv_fill(LP_fname,tbl,city_nm):
    count = 0
    for table_name in tbl:
        with open(LP_fname, 'a') as f:
            lines = "\n\nfloat " + table_name + " (35040,2)"
            f.writelines(lines)
        f.close()

        #File name for E+ csv load profile
        CSV_filename = "Medium-Office-ASHRAE-90-1-2019-" + city_nm + table_name + ".csv"

        with open(CSV_filename) as csv_file:
            csv_reader = csv.reader(csv_file, delimiter=',')
            line_count = 0
            with open(LP_fname, 'a') as f:
                for row in csv_reader:
                    if line_count != 0:
                        lines = "\n" + str(row[0]) + "," + str(row[1])
                        count = count+1
                        f.writelines(lines)
                        line_count=line_count+1
                    else:
                        line_count=line_count+1
        f.close()
        if count != 35040:
            print("Check the load profile file. Data points do not cover 8760 hrs")
        count = 0


#Level 1 light load profile
LP_filename = city_name + "L1_Light_LP.txt" #File name for CombiTimetable
tables = ["L1-Zn1-Lights", "L1-Zn2-Lights", "L1-Zn3-Lights", "L1-Zn4-Lights", 
          "L1-Core-Lights"] #List all the file names to convert from csv to CombiTimetable txt file
first_line(LP_filename) #Generate the final txt file
csv_fill(LP_filename,tables,city_name) #Generate the final txt file with LP


#Level 2 light load profile  
LP_filename = city_name + "L2_Light_LP.txt"
tables = ["L2-Zn1-Lights", "L2-Zn2-Lights", "L2-Zn3-Lights", "L2-Zn4-Lights", 
          "L2-Core-Lights"]
first_line(LP_filename)
csv_fill(LP_filename,tables,city_name)

#Level 3 light load profile 
LP_filename = city_name + "L3_Light_LP.txt"
tables = ["L3-Zn1-Lights", "L3-Zn2-Lights", "L3-Zn3-Lights", "L3-Zn4-Lights", 
          "L3-Core-Lights"]
first_line(LP_filename)
csv_fill(LP_filename,tables,city_name)

#Mechanical load profile 
LP_filename = city_name + "Mechanical_LP.txt"
tables = ["Mechanical"]
first_line(LP_filename)
csv_fill(LP_filename,tables,city_name)


#L1 MELs load profile 
LP_filename = city_name + "L1_MELs_LP.txt"
tables = ["L1-All-ITEquipment", "L1-All-Laptops" , "L1-All-MFDs", 
          "L1-All-Monitors", "L1-All-Plugs-General", "L1-All-Printers", "L1-All-TVs"]
first_line(LP_filename)
csv_fill(LP_filename,tables,city_name)

#L2 MELs load profile 
LP_filename = city_name + "L2_MELs_LP.txt"
tables = ["L2-All-ITEquipment", "L2-All-Laptops" , "L2-All-MFDs", 
          "L2-All-Monitors", "L2-All-Plugs-General", "L2-All-Printers", "L2-All-TVs"]
first_line(LP_filename)
csv_fill(LP_filename,tables,city_name)

#L3 MELs load profile 
LP_filename = city_name + "L3_MELs_LP.txt"
tables = ["L3-All-ITEquipment", "L3-All-Laptops" , "L3-All-MFDs", 
          "L3-All-Monitors", "L3-All-Plugs-General", "L3-All-Printers", "L3-All-TVs"]
first_line(LP_filename)
csv_fill(LP_filename,tables,city_name)

timecount = round(time.time() - startTime, 2)
print("code run time =  %s " %(timecount))